spring:
  application:
    name: transfer-api
  datasource:
    url: jdbc:postgresql://localhost:5432/transfer
    username: postgres
    password: pass1234
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 3000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
    show-sql: false

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.kafka: INFO

kafka-config:
  bootstrap-servers: host.docker.internal:9094
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://localhost:8085
  num-of-partitions: 3
  replication-factor: 1

kafka-producer-config:
  keySerializerClass: org.apache.kafka.common.serialization.StringSerializer
  valueSerializerClass: io.confluent.kafka.serializers.KafkaAvroSerializer
  compressionType: lz4
  acks: "1"
  batchSize: 65536        # 64KB로 증가
  batchSizeBoostFactor: 1
  lingerMs: 5             # 배치 대기 시간
  requestTimeoutMs: 1000  # 1초로 단축
  retryCount: 0           # 재시도 없음 (빠른 실패)

app:
  kafka:
    topics:
      transfer-events: transfer-events.v1

id:
  snowflake:
    node-id: ${SNOWFLAKE_NODE_ID:1}
    custom-epoch: 1704067200000
    max-clock-backward-ms: 5

management:
  tracing:
    enabled: true
    sampling:
      probability: 1.0